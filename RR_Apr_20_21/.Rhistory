setwd("C:/R_analizy/praca_magisterska")
setwd("C:/R_analizy/praca_magisterska")
getwd()
install.packages("shiny.fluent")
remotes::install_github("Appsilon/shiny.react")
install.packages("remotes")
remotes::install_github("Appsilon/shiny.react")
remotes::install_github("Appsilon/shiny.react")
remotes::install_github("Appsilon/shiny.fluent")
shiny.fluent::runExample("example_name")
shiny.fluent::runExample("Modal.R")
shiny.fluent::runExample("e2e-test.R")
shiny.fluent::runExample("e2e-test")
install.packages("leaflet")
shiny.fluent::runExample("e2e-test")
install.packages("DT")
shiny.fluent::runExample("e2e-test")
shiny.fluent::runExample("demo")
install.packages("shiny.router")
shiny.fluent::runExample("demo")
install.packages("shiny.i18n")
shiny.fluent::runExample("demo")
install.packages("plotly")
shiny.fluent::runExample("demo")
shiny.fluent::runExample("demo")
shiny.fluent::runExample("dashboard")
knitr::opts_chunk$set(echo = TRUE)
install.packages("C:/UW/optionPricer/optionPricer_0.1.0.tar.gz",
type = "source",
repos = NULL)
install.packages("C:/UW/optionPricer/optionPricer_0.1.0.tar.gz",
type = "source",
repos = NULL)
install.packages("Rtools")
install.packages("Rtool")
install.packages("C:/UW/optionPricer/optionPricer_0.1.0.tar.gz",
type = "source",
repos = NULL)
install.packages("make")
state.name
to_upper(state.name)
toupper(state.name)
tolower(state.name)
rbind(toupper(state.name), tolower(state.name))
cbind(toupper(state.name), tolower(state.name))
#there is a state object in base R. We can use toupper and tolower functions
toupper(state.name)
tolower(state.name)
states_names <- data.frame(uppercase = toupper(state.name),
lowercase = tolower(state.name))
write.csv(states_names, "state_names.csv")
#there is a state object in base R. We can use toupper and tolower functions
toupper(state.name)
tolower(state.name)
states_names <- data.frame(uppercase = toupper(state.name),
lowercase = tolower(state.name))
write.csv(states_names, "state_names.csv")
library(tidyverse)
# read the file with data
studPerformance <- read.csv('StudentsPerformance.csv')
library(readr)
StudentsPerformance <- read_csv("C:/UW/RR/RRcourse2022/RR_Apr_20_21/StudentsPerformance.csv")
View(StudentsPerformance)
# read the file with data
StudentsPerformance <- read.csv('StudentsPerformance.csv')
# the dataframe contains data about 5 groups
unique(StudentsPerformance$`race/ethnicity`)
lu(StudentsPerformance$`race/ethnicity`)
length(unique((StudentsPerformance$`race/ethnicity`))
#don't use "/" in column names...
StudentsPerformance <- StudentsPerformance %>%
rename(race_ethnicity = `race/ethnicity`)
View(StudentsPerformance)
#don't use "/" in column names...
StudentsPerformance <- StudentsPerformance %>%
rename(race_ethnicity = `race/ethnicity`)
length(unique(StudentsPerformance$race_ethnicity))
#don't use "/" in column names...
StudentsPerformance <- StudentsPerformance %>%
rename(race_ethnicity = `race/ethnicity`,
math_score = `math score`)
StudentsPerformance <- StudentsPerformance %>% rename(math_score = `math score`)
# print mean math score for each group
StudentsPerformance %>%
group_by(`race/ethnicity`) %>%
summarize(mean_math_score = mean(math_score))
# print mean math score for each group
StudentsPerformance %>%
group_by(race_ethnicity) %>%
summarize(mean_math_score = mean(math_score))
StudentsPerformance <- StudentsPerformance %>%
rename(
test_preparation_course = `test preparation course`,
parental_education = `parental level of education`)
StudentsPerformance %>%
filter(test_preparation_course == "completed" &
parental_education %in% c("associate's degree",
"bachelor's degree",
"master's degree")) %>%
summarize(math = mean(math_score),
reading = mean(`reading score`),
writing = mean(`writing score`))
StudentsPerformance %>%
mutate(value = math_score/`reading score`) %>%
ggplot(aes(x = value)) %>%
geom_histogram(stat  = "bin")
StudentsPerformance %>%
mutate(value = math_score/`reading score`) %>%
ggplot(aes(x = value)) +
geom_histogram(stat  = "bin")
StudentsPerformance %>%
mutate(value = math_score/`reading score`) %>%
ggplot(aes(x = value)) +
geom_histogram(stat  = "bin") +
theme_minimal()
StudentsPerformance %>%
mutate(value = math_score/`reading score`) %>%
ggplot(aes(x = value)) +
geom_histogram(stat  = "bin", fill = "steelblue") +
theme_minimal()
setwd("C:/UW/RR/RRcourse2022/RR_Apr_20_21")
write.csv(states_names, "state_names.csv")
